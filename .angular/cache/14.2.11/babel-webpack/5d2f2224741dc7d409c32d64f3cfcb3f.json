{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/task.service\";\nimport * as i2 from \"ngx-cookie-service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/flex-layout/flex\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/icon\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nexport let HomeComponent = /*#__PURE__*/(() => {\n  class HomeComponent {\n    constructor(taskService, cookieService, fb) {\n      this.taskService = taskService;\n      this.cookieService = cookieService;\n      this.fb = fb;\n      this.serverMessages = [];\n      this.taskForm = this.fb.group({\n        task: [null, Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(35)])]\n      });\n      this.empId = parseInt(this.cookieService.get(\"session_user\"), 10);\n      this.employee = {};\n      this.todo = []; //this.doing = [];\n\n      this.done = [];\n      this.newTaskId = \"\";\n      this.newTaskMessage = \"\";\n      this.taskService.findAllTasks(this.empId).subscribe({\n        next: res => {\n          this.employee = res;\n          console.log(\"--Employee Data--\");\n          console.log(this.employee);\n        },\n        error: err => {\n          console.error(err.message);\n          this.serverMessages = [{\n            severity: \"error\",\n            summary: \"Error\",\n            detail: err.message\n          }];\n        },\n        complete: () => {\n          this.todo = this.employee.todo; //this.doing = this.employee.doing;\n\n          this.done = this.employee.done;\n          console.log(\"--ToDo and Done Data--\");\n          console.log(this.todo);\n        }\n      });\n    }\n\n    ngOnInit() {} // Create a new task\n\n\n    createTask() {\n      const newTask = this.taskForm.controls[\"task\"].value;\n      this.taskService.createTask(this.empId, newTask).subscribe({\n        next: res => {\n          this.newTaskId = res.data.id;\n          this.newTaskMessage = res.message;\n          console.log(\"--New Task ID--\");\n          console.log(this.newTaskId);\n        },\n        error: err => {\n          console.error(err.message);\n          this.serverMessages = [{\n            severity: \"error\",\n            summary: \"Error\",\n            detail: err.message\n          }];\n        },\n        complete: () => {\n          let task = {\n            _id: this.newTaskId,\n            text: newTask\n          };\n          this.todo.push(task);\n          this.newTaskId = \"\";\n          this.taskForm.controls[\"task\"].setErrors({\n            incorrect: false\n          });\n          this.serverMessages = [{\n            severity: \"success\",\n            summary: \"Success\",\n            detail: this.newTaskMessage\n          }];\n        }\n      });\n    }\n\n  }\n\n  HomeComponent.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.CookieService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n\n  HomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 34,\n    vars: 1,\n    consts: [[\"fxLayout\", \"column\", 1, \"main-welcome\"], [\"fxFlex\", \"\"], [1, \"title\"], [1, \"subtitle\"], [\"fxLayout\", \"column\", 1, \"task-input-container\"], [1, \"task-container\"], [\"fxLayout\", \"column\", 1, \"input-container\", \"mat-elevation-z4\", \"w-50\"], [3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"fill\", 1, \"w-50\"], [\"matInput\", \"\", \"placeholder\", \"Enter a task name...\"], [\"type\", \"submit\", \"mat-icon-button\", \"\", \"matSuffix\", \"\"], [\"color\", \"primary\", \"matSuffix\", \"\", 2, \"width\", \"36px\", \"height\", \"36px\", \"font-size\", \"36px\", \"margin-left\", \"10px\"], [\"fxLayout\", \"row\", \"fxLayoutGap\", \"15px\", 1, \"task-container\", 2, \"margin-top\", \"10px\"], [1, \"mat-elevation-z0\"], [\"fxLayout\", \"row\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n        i0.ɵɵtext(3, \" Welcome to WEB 450's - nodebucket Project \");\n        i0.ɵɵelement(4, \"br\");\n        i0.ɵɵelementStart(5, \"span\", 3);\n        i0.ɵɵtext(6, \" Pay close attention to the requirements, double and triple check the files for code attribution, and do not wait until the last minute to begin working on your tasks. \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(7, \"div\", 4);\n        i0.ɵɵelement(8, \"div\", 5);\n        i0.ɵɵelementStart(9, \"div\", 6)(10, \"mat-card\")(11, \"form\", 7);\n        i0.ɵɵlistener(\"ngSubmit\", function HomeComponent_Template_form_ngSubmit_11_listener() {\n          ctx.createTask();\n          return ctx.taskForm.reset();\n        });\n        i0.ɵɵelementStart(12, \"mat-card-content\")(13, \"mat-form-field\", 8);\n        i0.ɵɵelement(14, \"input\", 9);\n        i0.ɵɵelementStart(15, \"button\", 10)(16, \"mat-icon\", 11);\n        i0.ɵɵtext(17, \" add_circle \");\n        i0.ɵɵelementEnd()()()()()()();\n        i0.ɵɵelementStart(18, \"div\", 1)(19, \"div\", 12)(20, \"div\", 1)(21, \"mat-card\", 13)(22, \"mat-card-title\");\n        i0.ɵɵtext(23, \"ToDo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"mat-card-content\")(25, \"div\", 14);\n        i0.ɵɵelement(26, \"div\", 1);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(27, \"div\", 1)(28, \"mat-card\", 13)(29, \"mat-card-title\");\n        i0.ɵɵtext(30, \"Done\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"mat-card-content\")(32, \"div\", 14);\n        i0.ɵɵelement(33, \"div\", 1);\n        i0.ɵɵelementEnd()()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"formGroup\", ctx.taskForm);\n      }\n    },\n    dependencies: [i4.DefaultLayoutDirective, i4.DefaultLayoutGapDirective, i4.DefaultFlexDirective, i5.MatButton, i6.MatIcon, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i7.MatCard, i7.MatCardContent, i7.MatCardTitle, i8.MatFormField, i8.MatSuffix, i9.MatInput],\n    styles: [\".main-welcome[_ngcontent-%COMP%]{margin-top:30px}.title[_ngcontent-%COMP%]{text-align:center;font-weight:lighter}.subtitle[_ngcontent-%COMP%]{text-align:center;font-size:14px}.task-container[_ngcontent-%COMP%]{width:90%;margin:auto}.input-container[_ngcontent-%COMP%]{width:90%;margin:auto;background-color:#1a237e}input[_ngcontent-%COMP%]{background-color:#fff;height:60px;border-radius:5px;font-family:Abril Fatface,cursive;font-size:18px}.task-input-container[_ngcontent-%COMP%]{background-color:#283593;width:70%;margin:auto;padding:10px}\"]\n  });\n  return HomeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}