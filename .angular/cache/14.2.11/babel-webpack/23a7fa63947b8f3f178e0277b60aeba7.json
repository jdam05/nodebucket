{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"ngx-cookie-service\";\nimport * as i4 from \"./../../shared/session.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/flex-layout/flex\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/card\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"primeng/messages\";\n\nfunction LoginComponent_mat_error_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Employee ID is a required field. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_mat_error_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Employee ID must be a number. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(fb, router, cookieService, sessionService) {\n      this.fb = fb;\n      this.router = router;\n      this.cookieService = cookieService;\n      this.sessionService = sessionService;\n      this.errorMessages = [];\n      this.loginForm = this.fb.group({\n        empId: [null, Validators.compose([Validators.required, Validators.pattern(\"^[0-9]*$\")])]\n      });\n      this.employee = {};\n    }\n\n    ngOnInit() {}\n\n    login() {\n      const empId = this.loginForm.controls[\"empId\"].value;\n      this.sessionService.findEmployeeById(empId).subscribe({\n        next: res => {\n          if (res) {\n            this.employee = res;\n            this.cookieService.set(\"session_user\", this.employee.empId.toString(), 1);\n            this.cookieService.set(\"session_name\", `${this.employee.firstName} ${this.employee.lastName}`, 1);\n            this.router.navigate([\"/\"]);\n          } else {\n            this.errorMessages = [{\n              severity: \"error\",\n              summary: \"error\",\n              detail: \"Please enter a valid employee ID to continue\"\n            }];\n          }\n        },\n        error: err => {\n          console.error(err);\n          this.errorMessages = [{\n            severity: \"error\",\n            summary: \"error\",\n            detail: err.message\n          }];\n        }\n      });\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.CookieService), i0.ɵɵdirectiveInject(i4.SessionService));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 20,\n    vars: 8,\n    consts: [[\"fxLayout\", \"column\"], [\"fxFlex\", \"\", 1, \"login-container\"], [1, \"login-title\"], [1, \"login-subtitle\"], [3, \"value\", \"enableService\", \"valueChange\"], [3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"fill\", 1, \"w-100\"], [\"matInput\", \"\", \"formControlName\", \"empId\", \"placeholder\", \"Employee ID\"], [4, \"ngIf\"], [\"type\", \"submit\", \"fxFlex\", \"\", \"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"btn-lg\", 2, \"height\", \"50px\", \"font-size\", \"18px\", 3, \"disabled\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-card\", 1)(2, \"mat-card-header\")(3, \"mat-card-title\", 2);\n        i0.ɵɵtext(4, \" Employee Sign-in Page \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"br\");\n        i0.ɵɵelementStart(6, \"mat-card-subtitle\", 3);\n        i0.ɵɵtext(7, \" You must enter a valid employee ID to continue. \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"mat-card-content\")(9, \"p-messages\", 4);\n        i0.ɵɵlistener(\"valueChange\", function LoginComponent_Template_p_messages_valueChange_9_listener($event) {\n          return ctx.errorMessages = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"mat-card\")(11, \"form\", 5);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_11_listener() {\n          ctx.login();\n          return ctx.loginForm.reset();\n        });\n        i0.ɵɵelementStart(12, \"mat-card-content\")(13, \"mat-form-field\", 6);\n        i0.ɵɵelement(14, \"input\", 7);\n        i0.ɵɵtemplate(15, LoginComponent_mat_error_15_Template, 2, 0, \"mat-error\", 8);\n        i0.ɵɵtemplate(16, LoginComponent_mat_error_16_Template, 2, 0, \"mat-error\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"mat-card-actions\")(18, \"button\", 9);\n        i0.ɵɵtext(19, \" Log in \");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"value\", ctx.errorMessages)(\"enableService\", false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"mat-elevation-z8\", ctx.isActive);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"empId\"].hasError(\"required\") && ctx.loginForm.controls[\"empId\"].touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"empId\"].hasError(\"pattern\") && ctx.loginForm.controls[\"empId\"].touched);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n      }\n    },\n    dependencies: [i5.NgIf, i6.DefaultLayoutDirective, i6.DefaultFlexDirective, i7.MatButton, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i8.MatCard, i8.MatCardHeader, i8.MatCardContent, i8.MatCardTitle, i8.MatCardSubtitle, i8.MatCardActions, i9.MatError, i9.MatFormField, i10.MatInput, i11.Messages],\n    styles: [\".login-container[_ngcontent-%COMP%]{width:40%;margin:10% auto}.login-title[_ngcontent-%COMP%]{text-align:center;font-size:40px;font-weight:lighter;padding:10px}.login-subtitle[_ngcontent-%COMP%]{text-align:center;font-weight:lighter;padding:5px;color:#d6a800}.mat-card[_ngcontent-%COMP%]{padding:0}.mat-card-header[_ngcontent-%COMP%]{background-color:#4f3674;padding-left:6%;padding-top:15px;color:#fff}.mat-card-content[_ngcontent-%COMP%]{padding:20px}.mat-card-action[_ngcontent-%COMP%]{padding:25px}.btn-lg[_ngcontent-%COMP%]{height:36px;width:90rem}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}